@model Neighborly.Models.ListingDetailsViewModel
@{
    ViewData["Title"] = Model.Listing.Title;
    Layout = "~/Views/Shared/Listings_layout.cshtml";
}
<div class="min-h-screen bg-gray-50">
    <div class="neighborly-container">
        <div class="flex flex-col md:flex-row py-6 gap-6">
            <main class="flex-1 space-y-6">
                <a href="/listings" class="inline-flex items-center text-neighborly-600 hover:text-neighborly-700">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-left h-4 w-4 mr-1"><path d="m15 18-6-6 6-6"/></svg>
                    Powrót do ogłoszeń
                </a>

                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <div class="lg:col-span-2 space-y-6">
                        <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                            @if (!string.IsNullOrEmpty(Model.Listing.ImageUrl))
                            {
                                <div class="h-64 md:h-96 w-full overflow-hidden rounded-t-lg">
                                    <img src="@Model.Listing.ImageUrl" alt="@Model.Listing.Title" class="w-full h-full object-cover" />
                                </div>
                            }
                            <div class="flex flex-col space-y-1.5 p-6 pb-2">
                                <div class="flex justify-between items-start">
                                    <div>
                                        <div class="inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent @(Model.Listing.Type == "offer" ? "text-primary-foreground bg-neighborly-500" : "text-primary-foreground bg-blue-500")">
                                            @(Model.Listing.Type == "offer" ? "Oferuję pomoc" : "Szukam pomocy")
                                        </div>
                                        <h1 class="text-2xl font-bold text-gray-900">@Model.Listing.Title</h1>

                                        <div class="flex items-center text-sm text-gray-500 mt-2">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin h-4 w-4 mr-1 text-neighborly-500"><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"/><circle cx="12" cy="10" r="3"/></svg>
                                            <span>@Model.Listing.Location.District, @Model.Listing.Location.City</span>
                                            <span class="mx-2">•</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clock h-4 w-4 mr-1"><circle cx="12" cy="12" r="10"/><polyline points="12 6 12 12 16 14"/></svg>
                                            <span>@Model.Listing.CreatedAt.ToString("dd.MM.yyyy")</span>
                                        </div>
                                    </div>
                                    <div class="flex space-x-2">
                                        @if (Context.Session.GetInt32("UserId") != null)
                                        {
                                        <button id="like-button" data-listing-id="@Model.Listing.Id" data-liked="@Model.IsFavorite" class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-transparent hover:bg-gray-100 h-9 w-9">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-heart h-5 w-5"><path d="M19.5 12.572 12 21.35l-7.5-8.778A5.374 5.374 0 0 1 12 5.002a5.374 5.374 0 0 1 7.5 7.57Z"/></svg>
                                        </button>
                                        }
                                          <button id="share-button" data-link="@Url.Action("Details", "Listings", new { id = Model.Listing.Id }, Context.Request.Scheme)" class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-transparent hover:bg-gray-100 h-9 w-9">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-share h-5 w-5"><path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"/><polyline points="16 6 12 2 8 6"></polyline><line x1="12" x2="12" y1="2" y2="15"></line></svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="p-6 pt-0">
                                <h2 class="font-semibold text-lg mb-2">Opis</h2>
                                <p class="text-gray-700 whitespace-pre-line">@Model.Listing.Description</p>
                                <div class="mt-6 inline-block">
                                    <div class="inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border border-input text-foreground mr-2 mb-2">
                                        @Model.Listing.Category
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                            <div class="flex flex-col space-y-1.5 p-6">
                                <h2 class="font-semibold text-lg">Mapa lokalizacji</h2>
                            </div>
                            <div class="p-6 pt-0">
                                <iframe width="100%" height="256" class="rounded-md" loading="lazy" allowfullscreen
                                        referrerpolicy="no-referrer-when-downgrade"
                                        src="https://www.google.com/maps/embed/v1/view?key=@ViewBag.GoogleApiKey&center=@Model.Listing.Latitude,@Model.Listing.Longitude&zoom=14">
                                </iframe>
                            </div>
                        </div>
                    </div>
                    <div class="space-y-6">
                        <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                            <div class="flex flex-col space-y-1.5 p-6">
                                <h2 class="font-semibold text-lg">O ogłaszającym</h2>
                            </div>
                            <div class="p-6 pt-0 pb-3">
                                <div class="flex items-center">
                                    <div class="h-12 w-12 rounded-full overflow-hidden bg-gray-200 flex-shrink-0">
                                        @if (!string.IsNullOrEmpty(Model.Listing.User.Avatar))
                                        {
                                            <img src="@Model.Listing.User.Avatar" alt="@Model.Listing.User.Name" class="h-full w-full object-cover" />
                                        }
                                        else
                                        {
                                            <div class="h-full w-full flex items-center justify-center bg-neighborly-100 text-neighborly-600 font-semibold">@Model.Listing.User.Name.Substring(0,1)</div>
                                        }
                                    </div>
                                    <div class="ml-4">
                                        <p class="font-medium">@Model.Listing.User.Name</p>
                                        <div class="flex items-center text-sm text-gray-500">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-star h-4 w-4 fill-yellow-400 text-yellow-400"><path d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"/></svg>
                                            <span class="ml-1">@Model.Listing.User.Rating.ToString("0.0") / 5.0</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-4 space-y-3">
                                                                        <a asp-action="Profile" asp-controller="Account" asp-route-id="@Model.Listing.User.Id" class="w-full inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user h-4 w-4 mr-2"><path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
                                        Zobacz profil
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                             <form asp-controller="Chat" asp-action="StartFromListing" method="post">
                                <input type="hidden" name="listingId" value="@Model.Listing.Id" />
                                <div class="flex flex-col space-y-1.5 p-6">
                                    <h2 class="font-semibold text-lg">Kontakt</h2>
                                </div>
                                <div class="p-6 pt-0">
                                    <textarea name="text" rows="4" placeholder="Napisz wiadomość..." class="resize-none focus-visible:ring-neighborly-500 w-full rounded-md border border-input bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"></textarea>
                                </div>
                                <div class="flex justify-between p-6 pt-0">
                                     <button id="report-button" type="button" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-flag h-4 w-4 mr-2"><path d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"/><line x1="4" x2="4" y1="22" y2="15"></line></svg>
                                        Zgłoś
                                    </button>
                                    <button type="submit" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-primary text-primary-foreground hover:bg-primary/90 h-9 rounded-md px-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-message-circle h-4 w-4 mr-2"><path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z"/></svg>
                                        Wyślij wiadomość
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
</div>
<script>
    const likeBtn = document.getElementById('like-button');
    if (likeBtn) {
        if ((likeBtn.dataset.liked || '').toLowerCase() === 'true') {
            likeBtn.classList.add('text-neighborly-600');
        }
        likeBtn.addEventListener('click', async function () {
            const id = this.dataset.listingId;
            const res = await fetch(`/listings/favorite/${id}`, { method: 'POST', credentials: 'include' });
            if (res.ok) {
                const data = await res.json();
                this.dataset.liked = data.isFavorite.toString();
                this.classList.toggle('text-neighborly-600', data.isFavorite);
            }
        });
    }

    document.getElementById('share-button').addEventListener('click', async function () {
        const link = this.dataset.link;
        try {
            await navigator.clipboard.writeText(link);
            alert('Skopiowano link do schowka');
        } catch (e) {
            console.error(e);
        }
    });
    const reportBtn = document.getElementById('report-button');
    if (reportBtn) {
        reportBtn.addEventListener('click', function () {
            fetch('/Listings/GetReportModal?listingId=@Model.Listing.Id')
                .then(res => res.text())
                .then(html => {
                    const div = document.createElement('div');
                    div.innerHTML = html;
                    document.body.appendChild(div.firstElementChild);
                    const close = document.querySelector('#reportModal button[onclick="closeReportModal()"]');
                    if (close) {
                        close.addEventListener('click', closeReportModal);
                    }
                });
        });
    }

    function closeReportModal() {
        const modal = document.getElementById('reportModal');
        if (modal) {
            modal.remove();
        }
    }
</script>
