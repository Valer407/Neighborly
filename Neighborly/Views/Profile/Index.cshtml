@model Neighborly.Models.ProfileViewModel
@{
    ViewData["Title"] = "Profil";
    Layout = "~/Views/Shared/Listings_layout.cshtml";
}
<div class="min-h-screen bg-gray-50">
    <div class="neighborly-container py-6">
        <div class="space-y-6">
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                <div class="lg:col-span-2 space-y-6">
                    <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                        <div class="flex flex-col space-y-1.5 p-6 pb-2">
                            <div class="flex items-center">
                                <div class="relative flex h-20 w-20 shrink-0 overflow-hidden rounded-full">
                                    @if (!string.IsNullOrEmpty(Model.User.Avatar))
                                    {
                                        <img class="aspect-square h-full w-full" src="@Model.User.Avatar" alt="@Model.User.Name" />
                                    }
                                    else
                                    {
                                        <span class="flex h-full w-full items-center justify-center rounded-full bg-muted bg-neighborly-100 text-neighborly-600 text-xl">@Model.User.Name.Substring(0,1)</span>
                                    }
                                </div>
                                <div class="ml-6">
                                    <div class="flex items-center">
                                        <h1 class="text-2xl font-bold text-gray-900">@Model.User.Name</h1>
                                    </div>
                                    <div class="flex items-center mt-1">
                                        <div class="flex items-center text-yellow-400">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 fill-current" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor"><polygon points="12 2 15 8.5 22 9.3 17 14.1 18.2 21 12 17.8 5.8 21 7 14.1 2 9.3 9 8.5 12 2"/></svg>
                                            <span class="ml-1 text-gray-900 font-semibold">@Model.User.Rating.ToString("0.0")</span>
                                        </div>
                                        <span class="mx-2 text-gray-300">•</span>
                                        <div class="flex items-center text-gray-600">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 10c0 6-9 12-9 12s-9-6-9-12a9 9 0 1 1 18 0z"/><circle cx="12" cy="10" r="3"/></svg>
                                            <span>
                                                @(!string.IsNullOrEmpty(Model.User.District) && !string.IsNullOrEmpty(Model.User.City)
                                                    ? $"{Model.User.District}, {Model.User.City}"
                                                    : "Brak informacji")
                                            </span>
                                    </div>
                                    <div class="flex items-center mt-1 text-sm text-gray-500">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="18" rx="2" ry="2"/><line x1="16" y1="2" x2="16" y2="6"/><line x1="8" y1="2" x2="8" y2="6"/><line x1="3" y1="10" x2="21" y2="10"/></svg>
                                        <span>Dołączył(a): @Model.User.MemberSince.ToString("yyyy-MM-dd")</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="p-6 pt-0">
                            <h2 class="font-semibold text-lg mt-2 mb-2">O mnie</h2>
                            <p class="text-gray-700">
                                @(!string.IsNullOrEmpty(Model.User.About) ? Model.User.About : "Brak opisu.")
                            </p>
                        </div>
                    </div>

                    <div>
                        <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                            <div class="flex flex-col space-y-1.5 p-6 pb-0">
                                <div role="tablist" aria-orientation="horizontal" class="h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground grid w-full grid-cols-2">
                                    <button id="trigger-listings" type="button" role="tab" aria-controls="content-listings" aria-selected="true" data-state="active" onclick="switchTab('listings')" class="inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm">Ogłoszenia</button>
                                    <button id="trigger-reviews" type="button" role="tab" aria-controls="content-reviews" aria-selected="false" data-state="inactive" onclick="switchTab('reviews')" class="inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm">Opinie (@Model.Reviews.Count)</button>
                                </div>
                            </div>
                            <div class="p-6 pt-6">
                                <div id="content-listings" role="tabpanel" aria-labelledby="trigger-listings" data-state="active" class="ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 m-0">
                                    @if (Model.Listings.Count > 0)
                                    {
                                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                            @foreach (var listing in Model.Listings)
                                            {
                                                <a href="/ogloszenie/@listing.Id">
                                                    <div class="rounded-lg border bg-card text-card-foreground shadow-sm h-full hover:shadow-md transition-shadow overflow-hidden border-gray-100">
                                                        <div class="relative">
                                                            <div class="absolute top-2 right-2">
                                                                <div class="inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-primary-foreground hover:bg-primary/80 @(listing.Type == "offer" ? "bg-neighborly-500" : "bg-blue-500")">@(listing.Type == "offer" ? "Oferuję pomoc" : "Szukam pomocy")</div>
                                                            </div>
                                                        </div>
                                                        <div class="p-4 @(listing.ImageUrl == null ? "pt-8" : string.Empty)">
                                                            <div class="space-y-2">
                                                                <h3 class="font-semibold text-lg line-clamp-2">@listing.Title</h3>
                                                                <p class="text-sm text-gray-600 line-clamp-2">@listing.Description</p>
                                                                <div class="flex items-center text-sm text-gray-500">
                                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin h-4 w-4 mr-1 text-neighborly-500"><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"/><circle cx="12" cy="10" r="3"/></svg>
                                                                    <span>@listing.Location.District, @listing.Location.City</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="p-4 pt-0 flex justify-between items-center border-t border-gray-100 mt-2">
                                                            <div class="flex items-center">
                                                                <div class="h-8 w-8 rounded-full bg-gray-200 flex-shrink-0 overflow-hidden">
                                                                    @if (listing.User.Avatar != null)
                                                                    {
                                                                        <img src="@listing.User.Avatar" alt="@listing.User.Name" class="h-full w-full object-cover" />
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="h-full w-full flex items-center justify-center bg-neighborly-100 text-neighborly-600 font-semibold">@listing.User.Name.Substring(0,1)</div>
                                                                    }
                                                                </div>
                                                                <div class="ml-2">
                                                                    <p class="text-sm font-medium">@listing.User.Name</p>
                                                                    <div class="flex items-center">
                                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-star h-3 w-3 fill-yellow-400 text-yellow-400"><path d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"/></svg>
                                                                        <span class="text-xs text-gray-500 ml-1">@listing.User.Rating.ToString("0.0")</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="flex items-center text-xs text-gray-500">
                                                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clock h-3 w-3 mr-1"><circle cx="12" cy="12" r="10"/><polyline points="12 6 12 12 16 14"/></svg>
                                                                <span>@listing.CreatedAt.ToString("dd.MM.yyyy")</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-8">
                                            <p class="text-gray-500">Ten użytkownik nie ma jeszcze ogłoszeń.</p>
                                        </div>
                                    }
                                </div>
                                <div id="content-reviews" role="tabpanel" aria-labelledby="trigger-reviews" data-state="inactive" hidden class="ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 m-0">
                                    @if (Model.Reviews.Count > 0)
                                    {
                                        <div class="space-y-4">
                                            @foreach (var review in Model.Reviews)
                                            {
                                                <div class="p-4 border rounded-lg">
                                                    <div class="flex justify-between">
                                                        <div class="flex items-center">
                                                            <div class="relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full">
                                                                @if (!string.IsNullOrEmpty(review.Author.Avatar))
                                                                {
                                                                    <img class="aspect-square h-full w-full" src="@review.Author.Avatar" alt="@review.Author.Name" />
                                                                }
                                                                else
                                                                {
                                                                    <span class="flex h-full w-full items-center justify-center rounded-full bg-gray-200 text-gray-600">@review.Author.Name.Substring(0,1)</span>
                                                                }
                                                            </div>
                                                            <div class="ml-3">
                                                                <div class="font-medium">@review.Author.Name</div>
                                                                <div class="flex items-center">
                                                                    @for (int i = 0; i < 5; i++)
                                                                    {
                                                                        var filled = i < review.Rating;
                                                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 @(filled ? "fill-yellow-400 text-yellow-400" : "text-gray-300")" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor"><polygon points="12 2 15 8.5 22 9.3 17 14.1 18.2 21 12 17.8 5.8 21 7 14.1 2 9.3 9 8.5 12 2"/></svg>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="text-sm text-gray-500 flex items-center">
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><polyline points="12 6 12 12 16 14"/></svg>
                                                            @review.Date.ToString("yyyy-MM-dd")
                                                        </div>
                                                        @if (!string.IsNullOrEmpty(review.CategoryName))
                                                        {
                                                            <div class="text-sm text-gray-500">@review.CategoryName</div>
                                                        }
                                                    </div>
                                                    <p class="mt-3 text-gray-700">@review.Comment</p>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-8">
                                            <p class="text-gray-500">Ten użytkownik nie ma jeszcze opinii.</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="space-y-6">
                    <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                        <div class="flex flex-col space-y-1.5 p-6">
                            <h2 class="font-semibold text-lg">Statystyki</h2>
                        </div>
                        <div class="p-6 pt-0">
                            <div class="space-y-4">
                                <div>
                                    <div class="text-sm text-gray-500">Ogłoszenia</div>
                                    <div class="text-2xl font-semibold">@Model.Listings.Count</div>
                                </div>
                                <hr />
                                <div>
                                    <div class="text-sm text-gray-500">Opinie</div>
                                    <div class="text-2xl font-semibold">@Model.Reviews.Count</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
                        <div class="flex flex-col space-y-1.5 p-6">
                            <h2 class="font-semibold text-lg">Kontakt</h2>
                        </div>
                        <div class="p-6 pt-0">
                            <p class="text-gray-600 mb-4">
                                Masz pytanie lub chcesz skorzystać z pomocy? Skontaktuj się z @Model.User.Name.
                            </p>
                            <button class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2">
                                <svg xmlns="http://www.w3.org/2000/svg" class="lucide lucide-message-circle h-4 w-4 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z"/></svg>
                                Napisz wiadomość
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function switchTab(tab) {
        const listingsTrigger = document.getElementById('trigger-listings');
        const reviewsTrigger = document.getElementById('trigger-reviews');
        const listingsContent = document.getElementById('content-listings');
        const reviewsContent = document.getElementById('content-reviews');
        if (tab === 'listings') {
            listingsTrigger.dataset.state = 'active';
            listingsTrigger.setAttribute('aria-selected', 'true');
            reviewsTrigger.dataset.state = 'inactive';
            reviewsTrigger.setAttribute('aria-selected', 'false');
            listingsContent.hidden = false;
            listingsContent.dataset.state = 'active';
            reviewsContent.hidden = true;
            reviewsContent.dataset.state = 'inactive';
        } else {
            listingsTrigger.dataset.state = 'inactive';
            listingsTrigger.setAttribute('aria-selected', 'false');
            reviewsTrigger.dataset.state = 'active';
            reviewsTrigger.setAttribute('aria-selected', 'true');
            listingsContent.hidden = true;
            listingsContent.dataset.state = 'inactive';
            reviewsContent.hidden = false;
            reviewsContent.dataset.state = 'active';
        }
    }
</script>